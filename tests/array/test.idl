/**
 * @file    test.idl
 * @author  Mark Drijver
 *
 * @copyright Copyright (c) Remedy IT Expertise BV
 */

/// Put the interfaces in a module, to avoid global namespace pollution
module Bar
{
  typedef sequence<char, 20> b20;
};

module Test
{
  typedef sequence<char,20> c20;
  typedef sequence<c20,23> cc23;
  typedef sequence<Bar::b20,23> bc23;
  interface x {
    void do ();
  };
  typedef long F[5];
  typedef long G[5];
  typedef string V[5];
  typedef string M[1][2][3];
  typedef long N[1][2][3];
  typedef Object o[4];
  typedef x a[5];

  enum enumType
  {
    d,
    e,
    b
  };

  typedef enumType arrayofenum[5];
  typedef long arrayoflong[5];

  typedef arrayofenum arrayarrayofenum[5];
  typedef arrayoflong arrayarrayoflong[5];
  typedef arrayarrayoflong arrayarrayoflonglong[5];

  typedef enumType Q[1][2][3];

  struct ArrayStruct {
    arrayarrayofenum aae;
    arrayarrayoflong aal;
    arrayarrayoflonglong aaal;
  };

  struct FooStruct {
    F my_f;
    M my_m;
    N my_n;
    Q my_q;
  };

  exception SomeException
  {
    F my_f;
  };

  interface Foo {
    boolean pass_array(in F p1, out V p2, inout M p3);

    F return_array ();

    /// A method to shutdown the ORB
    /**
     * This method is used to simplify the test shutdown process
     */
    oneway void shutdown ();
  };
};

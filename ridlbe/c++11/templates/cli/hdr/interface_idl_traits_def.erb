
// generated from <%= ridl_template_path %>
template <typename OStrm_>
inline OStrm_&
formatter< <%= scoped_cxxtype %>, OStrm_>::operator ()(
      OStrm_& os_,
      <%= scoped_cxx_in_type %> val_)
{
% if is_abstract?
  os_ << IDL::traits<TAOX11_CORBA::AbstractBase>::_dump (
           val_,
           "<%= formatted_cxxname %>");
% else
  os_ << IDL::traits<TAOX11_CORBA::Object>::_dump (
           std::move (val_),
           "<%= formatted_cxxname %>");
% end
  return os_;
}

template <typename OStrm_, typename Fmt>
inline OStrm_& operator <<(
    OStrm_& os,
    IDL::traits< <%= scoped_cxxtype %>>::__Writer<Fmt> w)
{
  typedef IDL::traits< <%= scoped_cxxtype %>>::__Writer<Fmt> writer_t;
  typedef typename std::conditional<
                      std::is_same<
                        typename writer_t::formatter_t,
                        std::false_type>::value,
                      formatter< <%= scoped_cxxtype %>, OStrm_>,
                      typename writer_t::formatter_t>::type formatter_t;
  return IDL::traits< <%= scoped_cxxtype %>>::write_on (
      os, w.val_,
      formatter_t ());
}

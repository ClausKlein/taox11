
// generated from <%= ridl_template_path %>
TAO_CORBA::Boolean operator<< (TAO_OutputCDR &strm, const <%= scoped_cxxname %> &_tao_bitmask)
{
#if defined (ACE_HAS_CPP23)
  return strm << std::to_underlying (_tao_bitmask);
#else
  return strm << static_cast<<%= bitbound.cxx_type %>> (_tao_bitmask);
#endif
}

TAO_CORBA::Boolean operator>> (TAO_InputCDR &strm, <%= scoped_cxxname %> &_tao_bitmask)
{
  std::underlying_type_t<<%= scoped_cxxname %>> _tao_temp <%= bitbound.value_initializer %>;
  bool const _tao_success = strm >> <%= bitbound.cdr_to_fmt % "_tao_temp" %>;

  if (_tao_success)
    {
      _tao_bitmask = static_cast<<%= scoped_cxxtype %>> (_tao_temp);
    }

  return _tao_success;
}


// generated from <%= ridl_template_path %>
TAO_CORBA::Boolean operator<< (TAO_OutputCDR &strm, const <%= scoped_cxxname %> &_tao_bitmask)
{
% _arg = "std::underlying_type_t<#{scoped_cxxname}::_flags>(_tao_bitmask)"
  return strm << <%= bitbound.cdr_from_fmt % _arg %>;
}

TAO_CORBA::Boolean operator>> (TAO_InputCDR &strm, <%= scoped_cxxname %> &_tao_bitmask)
{
  std::underlying_type_t<<%= scoped_cxxname %>::_flags> _tao_temp <%= bitbound.value_initializer %>;
  bool const _tao_success = strm >> <%= bitbound.cdr_to_fmt % "_tao_temp" %>;

  if (_tao_success)
    {
      _tao_bitmask = <%= scoped_cxxtype %> (_tao_temp);
    }

  return _tao_success;
}
